{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","Message","text","color","Image","props","bgUrl","Rating","ImageContainer","Year","Poster","id","imgUrl","rating","year","isMovie","to","require","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","length","map","movie","key","original_title","poster_path","vote_average","release_date","substring","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd1549be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.2acd8eb5.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\n//grid 개념 정리 해두기 \nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height:100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 20px;\n    `;\n\nexport default () => <Container><span role=\"img\" aria-label=\"Loading\">🔥</span></Container>\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content: center;\n    `;\n\nconst Text = styled.span`\n    color: #e74c3c;\n    font-weight: 600;\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text>color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius:4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity:0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover{\n        ${Image}{\n            opacity: 0.3;\n        }\n        ${Rating}{\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\n\nconst Poster = ({ id, imgUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={imgUrl ? `https://image.tmdb.org/t/p/w300${imgUrl}` : require(\"../assets/noPosterSmall.png\")\n                    } />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool.isRequired\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding:20px;\n    padding-top:20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n    <>\n        <Helmet>\n            <title>Movies | Jinflix</title>\n        </Helmet>\n        {loading ? <Loader /> : (\n            < Container >\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map(movie =>\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imgUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        )}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {upcoming.map(movie =>\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imgUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        )}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {popular.map(movie =>\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.original_title}\n                                imgUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        )}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container >\n        )}\n    </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\nimport \"./api\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"3dd17d84d08669f8018d6df04500d018\",\n        language: \"en-US\"\n    }\n})\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    topRated: () => api.get(\"movie/top_rated\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n        }),\n    search: term =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term)\n            }\n        })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: nowPlaying }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: upcoming }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: popular }\n            } = await moviesApi.nowPlaying();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState({\n                error: \"Can't find movies information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        console.log(this.state);\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>TV Shows| Jinflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n                < Container >\n                    {topRated && topRated.length > 0 && (\n                        <Section title=\"Top Rated Shows\">\n                            {topRated.map(show => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    title={show.original_name}\n                                    imgUrl={show.poster_path}\n                                    rating={show.vote_average}\n                                    year={show.first_air_date.substring(0, 4)}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {\n                        popular && popular.length > 0 && (\n                            <Section title=\"Popular Shows\">\n                                {popular.map(show => (\n                                    <Poster\n                                        key={show.id}\n                                        id={show.id}\n                                        title={show.original_name}\n                                        imgUrl={show.poster_path}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date.substring(0, 4)}\n                                    />\n                                ))}\n                            </Section>\n                        )\n                    }\n                    {\n                        airingToday && airingToday.length > 0 && (\n                            <Section title=\"Airing Today\">\n                                {airingToday.map(show => (\n                                    <Poster\n                                        key={show.id}\n                                        id={show.id}\n                                        title={show.original_name}\n                                        imgUrl={show.poster_path}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date.substring(0, 4)}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                    {error && <Message color=\"#e74c3c\" text={error} />}\n                </Container >\n            )}\n    </>\n)\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated }\n            } = await tvApi.topRated();\n            const {\n                data: { results: popular }\n            } = await tvApi.popular();\n            const {\n                data: { results: airingToday }\n            } = await tvApi.airingToday();\n            this.setState({ topRated, popular, airingToday })\n        } catch{\n            this.setState({\n                error: \"Can't find TV information.\"\n            });\n        } finally {\n            this.setState({ loading: false })\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display:flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color:rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n    `;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid \n        ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n`;\nexport default withRouter(({ location: { pathname } }) => (\n    < Header >\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header >\n));","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    searchTerm,\n    handleSubmit,\n    loading,\n    error,\n    updateTerm\n}) => (\n        <Container>\n            <Helmet><title>Search | Jinflix</title></Helmet>\n            <Form onSubmit={handleSubmit}>\n                <Input\n                    placeholder=\"Search Movies or TV shows...\"\n                    value={searchTerm}\n                    onChange={updateTerm}\n                />\n            </Form>\n            {loading ? (\n                <Loader />\n            ) : (\n                    <>\n                        {movieResults && movieResults.length > 0 && (\n                            <Section title=\"Movie Results\">\n                                {movieResults.map(movie => (\n                                    <Poster\n                                        key={movie.id}\n                                        id={movie.id}\n                                        title={movie.original_title}\n                                        imgUrl={movie.poster_path}\n                                        rating={movie.vote_average}\n                                        year={movie.release_date.substring(0, 4)}\n                                        isMovie={true}\n                                    />\n                                ))}\n                            </Section>\n                        )}\n                        {tvResults && tvResults.length > 0 && (\n                            <Section title=\"TV show Results\">\n                                {tvResults.map(show => (\n                                    <Poster\n                                        key={show.id}\n                                        id={show.id}\n                                        title={show.original_name}\n                                        imgUrl={show.poster_path}\n                                        rating={show.vote_average}\n                                        year={show.first_air_date.substring(0, 4)}\n                                    />\n                                ))}\n                            </Section>\n\n                        )}\n                        {error && <Message color=\"#e74c3c\" text={error} />}\n                        {tvResults &&\n                            movieResults &&\n                            tvResults.length === 0 &&\n                            movieResults.length === 0 && (\n                                <Message\n                                    text=\"Nothing found\"\n                                    color=\"#95a5a6\" />\n                            )}\n                    </>\n                )}\n        </Container >\n    );\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    loading: PropTypes.isRequired,\n    error: PropTypes.string,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm(searchTerm);\n        }\n    };\n\n    updateTerm = event => {\n        const {\n            target: { value }\n        } = event;\n        console.log(value);\n        this.setState({\n            searchTerm: value\n        });\n\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {\n                data: { results: movieResults }\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: { results: tvResults }\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults\n            })\n        } catch {\n            this.setState({ error: \"Can't find results.\" })\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position:absolute;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index:0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width:70%;\n    margin-left:10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) =>\n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | Jinflix</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n            < Container >\n                <Helmet>\n                    <title>{result.original_title ? result.original_title : result.original_name}</title>\n                </Helmet>\n                <Backdrop\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n                <Content>\n                    <Cover\n                        bgImage={\n                            result.poster_path\n                                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                                : require(\"../../assets/noPosterSmall.png\")\n                        }\n                    />\n                    <Data>\n                        <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                        <ItemContainer>\n                            <Item>{result.release_date\n                                ? result.release_date.substring(0, 4)\n                                : result.first_air_date.substring(0, 4)}\n                            </Item>\n                            <Divider>•</Divider>\n                            <Item>\n                                {result.runtime ? result.runtime : result.episode_run_time[0]}min\n                            </Item>\n                            <Divider>•</Divider>\n                            <Item>\n                                {result.genres &&\n                                    result.genres.map((genre, index) =>\n                                        index === result.genres.length - 1\n                                            ? genre.name\n                                            : `${genre.name} /`\n                                    )}\n                            </Item>\n                        </ItemContainer>\n                        <Overview>{result.overview}</Overview>\n                    </Data>\n                </Content >\n            </Container >\n        );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    // loading: PropTypes.bool.inRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        // this.isMovie = pathname.includes(\"/movie/\");\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find anything.\" })\n        } finally {\n            this.setState({ loading: false, result })\n        }\n        console.log(this.isMovie);\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        console.log(result);\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\"\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" exact component={TV} />\n                <Route path=\"/search\" exact component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top: 80px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}